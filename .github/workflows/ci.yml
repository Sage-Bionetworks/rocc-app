name: CI

on:
  schedule:
    - cron: '0 10 * * *' # everyday at 10am
  push:
    branches:
      - main
    tags:
      - '*.*.*'
  pull_request:

env:
  node_version: 14.x
  # github.event.repository.clone_url not available for on: schedule
  clone_url: https://github.com/Sage-Bionetworks/rocc-app.git
  gh_pages_url: https://sage-bionetworks.github.io/rocc-app
  # github.event.repository.default_branch not available for on: schedule
  default_branch: main
  docker_image: sagebionetworks/rocc-app

jobs:
  configure:
    runs-on: ubuntu-latest
    steps:
    - name: Create configuration
      run: |
        docker_image=${{ env.docker_image }}
        version=noop
        push=false
        if [ "${{ github.event_name }}" = "schedule" ]; then
          version=nightly
          push=true
        elif [[ $GITHUB_REF == refs/tags/* ]]; then
          version=${GITHUB_REF#refs/tags/}
        elif [[ $GITHUB_REF == refs/heads/* ]]; then
          version=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          if [ "${{ github.event.repository.default_branch }}" = "$version" ]; then
            version=edge
            push=true
          fi
        elif [[ $GITHUB_REF == refs/pull/* ]]; then
          version=pr-${{ github.event.number }}
        fi
        tags="${docker_image}:${version}"
        if [[ $version =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
          tags="$tags,${docker_image}:latest"
          push=true
        fi
        printf "%s\n" \
          "version=${version}" \
          "tags=${tags}" \
          "created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
          "push=${push}" | tee -a .github_env

    - name: Upload .github_env
      uses: actions/upload-artifact@v2
      with:
        name: GITHUB_ENV
        path: .github_env

  test:
    needs: [configure]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Setup Node.js ${{ env.node_version }}
      uses: actions/setup-node@v2.3.0
      with:
        node-version: ${{ env.node_version }}

    - name: Install dependencies
      run: npm run install:dependencies

    - name: Run lint checks
      run: npm run lint

    # - name: Run unit tests
    #   run: npm run test

    # - name: Run e2e tests
    #   run: npm run e2e

  docker:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Download .github_env
      uses: actions/download-artifact@v2
      with:
        name: GITHUB_ENV
        path: .

    - name: Restore $GITHUB_ENV
      run: cat .github_env >> $GITHUB_ENV

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      if: env.push == 'true'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: linux/amd64
        push: ${{ env.push }}
        tags: ${{ env.tags }}
        labels: |
          org.opencontainers.image.created=${{ env.created }}
          org.opencontainers.image.source=${{ github.repositoryUrl }}
          org.opencontainers.image.version=${{ env.version }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.licenses=${{ github.event.repository.license.name }}
